name: .NET Build

env:
  dotnet_version: 8.0.x
  project_path: ./src/SkyWriter.Console/
  project_file: SkyWriter.Console.csproj
  publish_path: bin/Release/net8.0/win-x64/publish/
  artifact_name: SkyWriter win-x64 Release

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "src/**"

jobs:
  checktag:
    name: Check for existing version tag
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.set_output.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Get csproj version
        id: project_version
        uses: bbonkr/get-version-action@v1
        with:
          project: "${{ env.project_path }}${{ env.project_file }}"

      - name: Check for corresponding git tag
        id: tag_check
        uses: mukunku/tag-exists-action@v1.2.0
        with:
          tag: "v${{ steps.project_version.outputs.version }}"

      - name: Fail on existing tag
        if: ${{ steps.tag_check.outputs.exists == 'true' }}
        run: exit 1

      - name: Set Output
        id: set_output
        run: echo "version=${{ steps.project_version.outputs.version }}" >> $GITHUB_OUTPUT

  build:
    name: Build SkyWriter
    needs: checktag
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnet_version }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.project_path }}

      - name: Build
        run: dotnet build ${{ env.project_path }} --no-restore

      - name: Publish
        run: dotnet publish ${{ env.project_path }} -c Release

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip artifact
        run: zip -qq -r SkyWriter.zip *
        working-directory: "${{ env.project_path }}${{ env.publish_path }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.artifact_name }}
          path: "${{ env.project_path }}${{ env.publish_path }}SkyWriter.zip"

  release:
    name: Draft Release
    needs: [checktag, build]
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: ./artifacts/

      - name: Rename output asset
        run: mv "./artifacts/SkyWriter.zip" "./artifacts/SkyWriter v${{ needs.checktag.outputs.version }}.zip"

      - name: Draft Release
        id: draft
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.checktag.outputs.version }}
          name: SkyWriter v${{ needs.checktag.outputs.version }}
          body: "## Release Notes\n\n- \n\n### Instructions\n\nDownload, unzip, and set the values listed in the [readme](https://github.com/zunderscore/SkyWriter/blob/main/README.md) in `appsettings.json`. Then run `SkyWriter.Console.exe`."
          draft: true
          prerelease: false
          files: |
            ./artifacts/SkyWriter v${{ needs.checktag.outputs.version }}.zip
